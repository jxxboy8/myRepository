
import java.awt.Point;
import java.util.ArrayList;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HW2Frame.java
 *
 * Created on 2011-10-23, 15:40:39
 */

/**
 *
 * @author mac
 */
public class HW2Frame extends javax.swing.JFrame {
    private boolean NearestNeighborOn;
    private boolean RangeOn;
    private boolean FindAssigningDCPoints;
    private boolean FindRelevantUsers;
    private boolean DCPointsOn;
    private boolean UsersOn;
    private boolean rangeDone;
    private static final int CIRCLE = 4;
    private static final int TRIANGLE = 3;
    public static final int NORMAL = 1;
    public static final int QUERY = 2;

    public static final int RANDOM = 3;

    private Query query;
    private QueryInfo selected;
    //private ArrayList<QueryInfo> FindRelevantUsersList;

    /** Creates new form HW2Frame */
    public HW2Frame() {
        initComponents();
        NearestNeighborOn = false;
        RangeOn = false;
        FindAssigningDCPoints = false;
        FindRelevantUsers = false;
        DCPointsOn = false;
        UsersOn = false;
        rangeDone = false;
        query = new Query();
        selected = new QueryInfo();
//        FindRelevantUsersList = new ArrayList<QueryInfo>();
        jPanelMap.setEnabled(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPointInfo = new javax.swing.JTextArea();
        jPanelMap = new HW2PanelPic();
        jPanel4 = new javax.swing.JPanel();
        jChooseNeareseNeighbor = new javax.swing.JRadioButton();
        jChooseRange = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jFindAssigningDCPoints = new javax.swing.JRadioButton();
        jFindRelevantUsers = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jCurrentCoordinates = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jDCPoints = new javax.swing.JCheckBox();
        jUsers = new javax.swing.JCheckBox();
        jClear = new javax.swing.JButton();
        jSubmitQuery = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jQueryCode = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jInput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPointInfo.setColumns(20);
        jPointInfo.setRows(5);
        jScrollPane1.setViewportView(jPointInfo);

        jPanelMap.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelMap.setPreferredSize(new java.awt.Dimension(600, 500));
        jPanelMap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelMapMouseClicked(evt);
            }
        });
        jPanelMap.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelMapMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout jPanelMapLayout = new javax.swing.GroupLayout(jPanelMap);
        jPanelMap.setLayout(jPanelMapLayout);
        jPanelMapLayout.setHorizontalGroup(
            jPanelMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 596, Short.MAX_VALUE)
        );
        jPanelMapLayout.setVerticalGroup(
            jPanelMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        buttonGroup1.add(jChooseNeareseNeighbor);
        jChooseNeareseNeighbor.setText("Nearest Neighbor");
        jChooseNeareseNeighbor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChooseNeareseNeighborActionPerformed(evt);
            }
        });

        buttonGroup1.add(jChooseRange);
        jChooseRange.setText("Range");
        jChooseRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChooseRangeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jChooseNeareseNeighbor)
                    .addComponent(jChooseRange))
                .addContainerGap(176, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jChooseNeareseNeighbor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jChooseRange)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        buttonGroup1.add(jFindAssigningDCPoints);
        jFindAssigningDCPoints.setText("Find Assigning DC-points");
        jFindAssigningDCPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFindAssigningDCPointsActionPerformed(evt);
            }
        });

        buttonGroup1.add(jFindRelevantUsers);
        jFindRelevantUsers.setText("Find Relevant Users");
        jFindRelevantUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFindRelevantUsersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jFindAssigningDCPoints)
                    .addComponent(jFindRelevantUsers))
                .addContainerGap(128, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jFindAssigningDCPoints)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jFindRelevantUsers))
        );

        jLabel1.setText("Current Coordinates (X,Y):");

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Active Features");

        jDCPoints.setText("DC-points");
        jDCPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDCPointsActionPerformed(evt);
            }
        });

        jUsers.setText("Users");
        jUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUsersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jUsers)
                            .addComponent(jDCPoints))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDCPoints)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jUsers)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jClear.setText("Clear");
        jClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearActionPerformed(evt);
            }
        });

        jSubmitQuery.setText("Submit Query");
        jSubmitQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSubmitQueryActionPerformed(evt);
            }
        });

        jQueryCode.setColumns(20);
        jQueryCode.setRows(5);
        jScrollPane2.setViewportView(jQueryCode);

        jLabel3.setText("Input");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCurrentCoordinates, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(34, 34, 34)
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(jInput, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSubmitQuery, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jClear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                            .addGap(15, 15, 15))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addComponent(jPanelMap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jClear, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSubmitQuery, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jCurrentCoordinates, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanelMapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMapMouseClicked
        String s = "";
        boolean submitted = false;

        if(jPanelMap.isSubmitquery()){    //select point contains to a user or a dc-point
            Point pt = new Point(evt.getX(), evt.getY());
            //System.out.println("Point: " + pt.getX() + " " + pt.getY() + "\n");
            for(int i = 0; i < jPanelMap.getInfo().size(); i++){
                if(jPanelMap.getInfo().get(i).contains(pt)){
                    selected = new QueryInfo(jPanelMap.getInfo().get(i));
                    submitted = true;
                    break;
                    }
            }
            //QueryInfo q = new QueryInfo("010", 150, 230, true);
            if(submitted == true){  //display select animal or truck information
                //selected.setId(query.querySelected(new Point(selected.getX(), selected.getY()), selected.isType()).get(0));
                //System.out.println(selected.getId());
                s += query.querySelected(selected);
                jPointInfo.setText(s);
            }
        }        // TODO add your handling code here:
}//GEN-LAST:event_jPanelMapMouseClicked

    private void jPanelMapMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMapMouseMoved
        // TODO add your handling code here:
        jCurrentCoordinates.setText("( " + evt.getX() + " , " + evt.getY() + " )");
}//GEN-LAST:event_jPanelMapMouseMoved

    private void jDCPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDCPointsActionPerformed
        // TODO add your handling code here:
         if(DCPointsOn == false)
            DCPointsOn = true;
        else
            DCPointsOn = false;
    }//GEN-LAST:event_jDCPointsActionPerformed

    private void jUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUsersActionPerformed
        // TODO add your handling code here:
        if(UsersOn == false)
            UsersOn = true;
        else
            UsersOn = false;
    }//GEN-LAST:event_jUsersActionPerformed

    private void jSubmitQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSubmitQueryActionPerformed
        // TODO add your handling code here:s
        int type = NORMAL;
        ArrayList<QueryInfo> pts = new ArrayList<QueryInfo>();
        jQueryCode.setText("");
        Point tempa = jPanelMap.getRangeChoosen1();
        Point tempb = jPanelMap.getRangeChoosen2();
        if(NearestNeighborOn){
            Point temp = jPanelMap.getRedChoosen();
            Integer inputNumer = Integer.parseInt(jInput.getText());
            pts = query.queryNearest(DCPointsOn, UsersOn, temp, inputNumer.intValue());
        }
        if(RangeOn){    //range query

            pts = query.queryRange(DCPointsOn, UsersOn, tempa, tempb);
        }
        if(FindAssigningDCPoints){
            jPanelMap.clearAll();
            jPanelMap.panelDraw(jPanelMap.getGraphics(), TRIANGLE, new Point(selected.getX(), selected.getY()), NORMAL);
            jPanelMap.getInfo().add(selected);
            pts = query.queryAssignDCPoint(selected);
            type = QUERY;
        }
        if(FindRelevantUsers){
            jPanelMap.clearAll();
            jPanelMap.panelDraw(jPanelMap.getGraphics(), CIRCLE, new Point(selected.getX(), selected.getY()), NORMAL);
            jPanelMap.getInfo().add(selected);
            Integer inputNumer = Integer.parseInt(jInput.getText());
            pts = query.queryRelevantUsers(selected, inputNumer.intValue());
//            FindRelevantUsersList = new ArrayList<QueryInfo>(pts);
            String s = jPointInfo.getText();
            s += "\n";
            //System.out.println(s);
            /*for(int i = 0; i < pts.size(); i++){
                s += "Rank: " + (i+1) + "\n";
                s += pts.get(i).getId() + "\n";
                s += "Address: " + pts.get(i).getName() + "\n";
                s += "Location: " + pts.get(i).getX() + ", " + pts.get(i).getY() + "\n";
                s += "Sensor type: " + pts.get(i).getMethod() + "\n";
                s += "\n";
            }*/
            jPointInfo.setText(s);
            jPanelMap.setInputNumber(Integer.parseInt(jInput.getText()));
            type = RANDOM;
            //System.out.println(jPanelMap.getInputNumber());
        }
        for(int i = 0; i < pts.size(); i++){
            if(pts.get(i).isDCPoints()){

                jPanelMap.panelDraw(jPanelMap.getGraphics(), CIRCLE, new Point(pts.get(i).getX(), pts.get
    (i).getY()), type);
                jPanelMap.getInfo().add(new QueryInfo(pts.get(i).getId(), pts.get(i).getName(), pts.get(i).getX(), pts.get(i).getY(), pts.get(i).phone, pts.get(i).method, false));
                }
            else{
                
                 jPanelMap.panelDraw(jPanelMap.getGraphics(), TRIANGLE, new Point(pts.get(i).getX(), pts.get(i).getY()), type);
                 if(FindRelevantUsers)
                 {
                    jPanelMap.stringSequence(jPanelMap.getGraphics(), new Point(pts.get(i).getX(), pts.get(i).getY()), i + 1);
                 }
                 jPanelMap.ColorCounter = jPanelMap.ColorCounter + 2;
                 //System.out.print(jPanelMap.ColorCounter+" #$ ");
                 jPanelMap.getInfo().add(new QueryInfo(pts.get(i).getId(), pts.get(i).getName(), pts.get(i).getX(), pts.get(i).getY(), pts.get(i).phone, pts.get(i).method, true));
                }
        }
        jPanelMap.ColorCounter = 0;
        jPanelMap.setSubmitquery(true);
        jQueryCode.setText(query.getQuery());
        query.setQuery("");
    }//GEN-LAST:event_jSubmitQueryActionPerformed

    private void jChooseNeareseNeighborActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChooseNeareseNeighborActionPerformed
        // TODO add your handling code here:
        NearestNeighborOn = true;
        RangeOn = false;
        FindAssigningDCPoints = false;
        FindRelevantUsers = false;
        jPanelMap.setNearestNeighborOn(NearestNeighborOn);
    }//GEN-LAST:event_jChooseNeareseNeighborActionPerformed

    private void jChooseRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChooseRangeActionPerformed
        // TODO add your handling code here:
        NearestNeighborOn = false;
        RangeOn = true;
        FindAssigningDCPoints = false;
        FindRelevantUsers = false;
        jPanelMap.setRangeOn(RangeOn);
    }//GEN-LAST:event_jChooseRangeActionPerformed

    private void jFindAssigningDCPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFindAssigningDCPointsActionPerformed
        // TODO add your handling code here:
        NearestNeighborOn = false;
        RangeOn = false;
        FindAssigningDCPoints = true;
        FindRelevantUsers = false;
    }//GEN-LAST:event_jFindAssigningDCPointsActionPerformed

    private void jFindRelevantUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFindRelevantUsersActionPerformed
        // TODO add your handling code here:
        NearestNeighborOn = false;
        RangeOn = false;
        FindAssigningDCPoints = false;
        FindRelevantUsers = true;
    }//GEN-LAST:event_jFindRelevantUsersActionPerformed

    private void jClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearActionPerformed
        // TODO add your handling code here:
        jPanelMap.clearAll();
        query = new Query();
        jPointInfo.setText("");
        rangeDone = false;
        jInput.setText("");
        jQueryCode.setText("");
    }//GEN-LAST:event_jClearActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HW2Frame hw = new HW2Frame();
                hw.setVisible(true);
                hw.setTitle("Jingtao Tong 5531-9818-66");
                hw.setLocationRelativeTo(null);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton jChooseNeareseNeighbor;
    private javax.swing.JRadioButton jChooseRange;
    private javax.swing.JButton jClear;
    private javax.swing.JTextField jCurrentCoordinates;
    private javax.swing.JCheckBox jDCPoints;
    private javax.swing.JRadioButton jFindAssigningDCPoints;
    private javax.swing.JRadioButton jFindRelevantUsers;
    private javax.swing.JTextField jInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private HW2PanelPic jPanelMap;
    private javax.swing.JTextArea jPointInfo;
    private javax.swing.JTextArea jQueryCode;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jSubmitQuery;
    private javax.swing.JCheckBox jUsers;
    // End of variables declaration//GEN-END:variables

}
